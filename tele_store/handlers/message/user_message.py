from __future__ import annotations

import logging
import re
from typing import TYPE_CHECKING

from aiogram import Router

from tele_store.keyboards.inline.cancel_button import cancel_key
from tele_store.keyboards.inline.select_delivery_method import (
    select_delivery_method_keyboard,
)
from tele_store.states.states import NewDelivery

if TYPE_CHECKING:
    from aiogram.fsm.context import FSMContext
    from aiogram.types import Message

router = Router()
logger = logging.getLogger(__name__)


@router.message(NewDelivery.name)
async def process_order_name(message: Message, state: FSMContext) -> None:
    """–ó–∞–ø—Ä–æ—Å–∏—Ç—å –∏–º—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è."""
    name = message.text.strip()
    if not name:
        await message.answer(
            "‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –µ—â—ë —Ä–∞–∑:",
            reply_markup=cancel_key(),
        )
        return

    await state.update_data(name=name)
    await state.set_state(NewDelivery.phone_number)
    await message.answer(
        "üìû –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:",
        reply_markup=cancel_key(),
    )


@router.message(NewDelivery.phone_number)
async def process_order_phone(message: Message, state: FSMContext) -> None:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    raw_phone = message.text.strip()
    digits_only = re.sub(r"\D", "", raw_phone)

    if len(digits_only) < 10 or len(digits_only) > 15:
        await message.answer(
            "‚ùå –ü–æ—Ö–æ–∂–µ, –Ω–æ–º–µ—Ä –≤–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79991234567:",
            reply_markup=cancel_key(),
        )
        return

    await state.update_data(phone_number=raw_phone)
    await state.set_state(NewDelivery.address)
    await message.answer(
        "üìç –£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–ª–∏ –ø—É–Ω–∫—Ç —Å–∞–º–æ–≤—ã–≤–æ–∑–∞:",
        reply_markup=cancel_key(),
    )


@router.message(NewDelivery.address)
async def process_order_address(message: Message, state: FSMContext) -> None:
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    address = message.text.strip()
    if not address:
        await message.answer(
            "‚ùå –ê–¥—Ä–µ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ù–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é:",
            reply_markup=cancel_key(),
        )
        return

    await state.update_data(address=address)
    await state.set_state(NewDelivery.delivery_method)
    await message.answer(
        "üöö –ö–∞–∫–æ–π —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
        reply_markup=select_delivery_method_keyboard(),
    )
